{// TS配置文件
  "compilerOptions": {  // 编译选项
    "target": "esnext",  // 目标代码（ts ==> js）
    "module": "esnext",  // 目标代码需要使用的模块化方案（commonjs require/module。exports/es module import/export）
    "strict": true,  // 严格模式检查
    "jsx": "preserve",  // 对jsx进行怎样的处理
    "moduleResolution": "node",  // 按照node去解析模块规则
    "skipLibCheck": true,  // 跳过对一些库的类型检测
    "esModuleInterop": true, // 混合使用es module和commonjs
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    "useDefineForClassFields": true,
    "sourceMap": true, // 要不要生成映射文件（ts-->js）
    "baseUrl": ".",
    "types": ["webpack-env"],
    "paths": {  // 路径解析
      "@/*": ["src/*"]
    },
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"] // 可以指定在项目中可以使用哪些库的类型
  },
  "include": [ // 哪些代码需要编译解析
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
, "src/assets/css/index.less"  ],
  "exclude": ["node_modules"] // 哪些代码不需要编译解析
}
